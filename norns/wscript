def build(bld):

    matron_sources = [
        '../matron/src/config.cc',
        '../matron/src/device/device.cc',
        '../matron/src/device/device_hid.cc',
        '../matron/src/device/device_list.cc',
        '../matron/src/device/device_midi.cc',
        '../matron/src/device/device_monitor.cc',
        '../matron/src/device/device_monome.cc',
        '../matron/src/device/device_crow.cc',
        '../matron/src/osc.cc',
        '../matron/src/hardware/battery.cc',
        '../matron/src/hardware/i2c.cc',
        '../matron/src/hardware/input.cc',
        '../matron/src/hardware/io.cc',
        '../matron/src/hardware/platform.cc',
        '../matron/src/hardware/screen.cc',
        '../matron/src/hardware/stat.cc',
	    '../matron/src/hardware/screen/fbdev.cc',
        '../matron/src/hardware/input/gpio.cc',
        '../matron/src/args.cc',
        '../matron/src/events.cc',
        '../matron/src/hello.cc',
        '../matron/src/input.cc',
        '../matron/src/lua_eval.cc',
        '../matron/src/main.cc',
        '../matron/src/metro.cc',
        '../matron/src/oracle.cc',
        '../matron/src/weaver.cc',
        '../matron/src/snd_file.cc',
        '../matron/src/system_cmd.cc',
        '../matron/src/clock.cc',
        '../matron/src/clocks/clock_internal.cc',
        '../matron/src/clocks/clock_midi.cc',
        '../matron/src/clocks/clock_crow.cc',
        '../matron/src/clocks/clock_scheduler.cc',
    ]

    if bld.env.NORNS_DESKTOP:
        matron_sources += [
            '../matron/src/hardware/screen/sdl.cc',
            '../matron/src/hardware/input/sdl.cc',
        ]

    atropos_sources = [
        '../atropos/src/main.cpp',
        '../atropos/src/BufDiskWorker.cpp',
        '../atropos/src/Commands.cpp',
        '../atropos/src/MixerClient.cpp',
        '../atropos/src/OscInterface.cpp',
        '../atropos/src/SoftcutClient.cpp',
        '../atropos/src/Taper.cpp',
        '../atropos/src/Window.cpp',
        '../atropos/softcut/softcut-lib/src/FadeCurves.cpp',
        '../atropos/softcut/softcut-lib/src/ReadWriteHead.cpp',
        '../atropos/softcut/softcut-lib/src/SubHead.cpp',
        '../atropos/softcut/softcut-lib/src/Svf.cpp',
        '../atropos/softcut/softcut-lib/src/Voice.cpp'
    ]

    matron_includes = [
        '../matron/src',
        '../matron/src/device',
        '../matron/src/hardware',
    ]

    matron_libs = [
        'pthread',
        'm',
    ]

    matron_use = [
        'ALSA',
        'LIBUDEV',
        'LIBEVDEV',
        'CAIRO',
        'CAIRO-FT',
        'LUA53',
        'LIBLO',
        'LIBMONOME',
        'SNDFILE',
        'AVAHI-COMPAT-LIBDNS_SD',
        'JACK',
    ]

    if bld.env.NORNS_DESKTOP:
        matron_libs.append('SDL2')
        matron_use.append('SDL2')

    if bld.env.ENABLE_ABLETON_LINK:
        matron_sources += ['../matron/src/clocks/clock_link.cc']
        matron_includes += ['../third-party/link-c']
        matron_libs += ['stdc++']
        matron_use += ['LIBLINK_C']

    if bld.env.PROFILE_MATRON:
        bld.env.append_unique('CXXFLAGS', ['-pg'])
        bld.env.append_unique('LDFLAGS', ['-pg'])
    
    atropos_includes=[
        '../atropos',
        '../atropos/src',
        '../atropos/softcut/softcut-lib/include',
        '../atropos/lib/readerwriterqueue'
    ]

    atropos_use=[
        'ALSA',
        'LIBLO',
    ]
    
    atropos_libs=[
        'atomic',
        'jack',
        'pthread',
        'm',
        'sndfile'
    ]
    
    norns_sources = ["main.cpp"] + matron_sources + atropos_sources
    norns_includes = matron_includes + atropos_includes
    norns_use = matron_use +atropos_use
    norns_libs = matron_libs + atropos_libs
    
    bld.program(features='c cprogram cxx cxxprogram',
        target='norns',
        source=norns_sources,
        includes=norns_includes,
        use=norns_use,
        lib=norns_libs,
        cxxflags=['-std=c++14', '-O3', '-Wall'],
        ldflags=['-Wl,-export-dynamic'])
